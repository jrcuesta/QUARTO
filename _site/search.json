[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "José Ramón Cuesta",
    "section": "",
    "text": "This is the personal blog of José Ramón Cuesta about the use of chemometric tools available in R to study the Near Infrared spectroscopy and develop models with the spectra and reference values."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "NIR-CHEMOMETRICS",
    "section": "",
    "text": "NIT Tutorial\n\n\nRemoving scatter\n\n\nMath-treatments\n\n\n\n\nThe use of linear or quadratic detrend alone or combined with SNV will be treated in this post\n\n\n\n\n\n\nOct 14, 2022\n\n\nJosé Ramón Cuesta\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nNIT Tutorial\n\n\nRemoving scatter\n\n\nMath-treatments\n\n\n\n\nThis time we use the Multiple Scatter Correction algorithm ro remove the scatter\n\n\n\n\n\n\nOct 5, 2022\n\n\nJosé Ramón Cuesta\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nNIT Tutorial\n\n\nRemoving scatter\n\n\nMath-treatments\n\n\n\n\nAlong the coming post we will several math treatments trying to improve the correlation between the predictors and the outcomes. In this one SNV\n\n\n\n\n\n\nOct 3, 2022\n\n\nJosé Ramón Cuesta\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nNIT Tutorial\n\n\nCollinearity\n\n\n\n\nLet´s check the correlation between the outcomes, between the predictors and between outcomes and predictors\n\n\n\n\n\n\nSep 29, 2022\n\n\nJosé Ramón Cuesta\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nNIT Tutorial\n\n\n\n\nLet use tidyverse to see the spectra and histograms\n\n\n\n\n\n\nSep 28, 2022\n\n\nJosé Ramón Cuesta\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNIT Tutorial\n\n\n\n\nPlot the near infrared transmitance spectra of meat samples and have a look to the histograms of the main parameters using classic R code\n\n\n\n\n\n\nSep 26, 2022\n\n\nJosé Ramón Cuesta\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nSep 23, 2022\n\n\nJosé Ramón Cuesta\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/NIT_tutorial_1/NIT_tutorial_1.html",
    "href": "posts/NIT_tutorial_1/NIT_tutorial_1.html",
    "title": "Near Infrared Transmitance Tutorial (part 1)",
    "section": "",
    "text": "This is the first post about how to work with Near Infrared Transmitance spectra, using the data available in the package Caret and called “tecator”. Just consult the information about this data in R\n\nlibrary(caret)\n?tecator\n\nWhen loading tecator, we have two data tables: “absorp” and “endpoints” with the spectra and reference values for the parameters “water”, “fat” and “protein” for the 215 meat samples.\n\ndata(tecator)\nls()\n\n[1] \"absorp\"    \"endpoints\"\n\n\nThe spectra data is in the “absorp” table which is a matrix of 215 rows (number of samples) ,and 100 columns (number of wavelengths ), so we can give names to the columns of “absorp” matrix.\n\ncolnames(absorp) <- seq(850, 1048, by = 2)\n\nWe can have a look to the spectra and see its appearance:\n\nmatplot(colnames(absorp), t(absorp), type = \"l\", ylab = \"Absorbance\", xlab = \"wavelength (nm)\", main = \"Raw meat spectra\")\n\n\n\n\nFigure 1: Raw spectra.\n\n\n\n\nWe can see the differences in absorbance for every spectra due to the scatter, differences in the pathlength and other physical reasons. This is something we have to work on to remove it and try to see as better as possibles the chemical changes due to the differences in moisture, fat and protein, which are the parameter we want to build models.\nThe “endpoints” table has the reference values for the parameters of interest (Moisture, Fat and Protein). It is important to have a look to the parameters distribution, so we can use for this the histogram, but first lets give names to the parameters matrix.\nAs we can see we have not coloumn names\n\ncolnames(endpoints)\n\nNULL\n\n\nSo we can give them names:\n\ncolnames(endpoints) <- c(\"Moisture\", \"Fat\", \"Protein\")"
  },
  {
    "objectID": "posts/NIT_tutorial_1/NIT_tutorial_1.html#looking-to-the-parameters-distribution",
    "href": "posts/NIT_tutorial_1/NIT_tutorial_1.html#looking-to-the-parameters-distribution",
    "title": "Near Infrared Transmitance Tutorial (part 1)",
    "section": "Looking to the parameters distribution",
    "text": "Looking to the parameters distribution\nLet´s see the Moisture histogram\n\nhistogram(endpoints[ , 1], xlab = \"Moisture content\", main =\"Histogram Moisture\", col = \"blue\")\n\n\n\n\nFigure 2: Moisture histogram.\n\n\n\n\nNow the Fat histogram\n\nhistogram(endpoints[ , 2], xlab = \"Fat content\", main =\"Histogram Fat\", col = \"grey\")\n\n\n\n\nFigure 3: Fat histogram.\n\n\n\n\nand finally the Protein histogram\n\nhistogram(endpoints[ , 3], xlab = \"Protein content\", main =\"Histogram Protein\", col = \"red\")\n\n\n\n\nFigure 4: Protein histogram.\n\n\n\n\nWe can create a data frame called “tecator” with the “endpoints” and “absorp” matrices\n\ntecator <- data.frame(endpoints)\ntecator$spec <- absorp\n\nNow let´s save the dataframe to use in another post:\n\nsave.image(\"C:/BLOG/Workspaces/NIT Tutorial/NIT_ws1.RData\")"
  },
  {
    "objectID": "posts/NIT_tutorial_2/NIT_tutorial_2.html",
    "href": "posts/NIT_tutorial_2/NIT_tutorial_2.html",
    "title": "Near Infrared Transmitance Tutorial (part 2)",
    "section": "",
    "text": "First we load the libraries we are going to use, and the “workspace” from the previous post:\n\nlibrary(tidyverse)\nlibrary(modeldata)\nload(\"C:/BLOG/Workspaces/NIT Tutorial/NIT_ws1.RData\")\nls()\n\n[1] \"absorp\"    \"endpoints\" \"tecator\"  \n\n\nNow we can create another field called “SampleID” as a sequence from 1 to 215 (number of samples), it will be very usefull whenever we use the tecator dataframe:\n\ntecator <- tecator %>%   \n  rowid_to_column(var = \"SampleID\") \n\nThe tecator data is available as well in the library “modeldata”, but with the name “meats”, so we can load it into the workspace and work with it using the tidyverse and tidymodels libraries. The idea of this tutorial is getting use to work with tidyverse and tidymodels at the same time that with classic R.\n\ndata(meats)\n?meats\n\nThe first 100 columns are the wavelengths are the datapoints and the last 3 the parameters, so we can rename de column names, and add an extra column called “SampleID” (same as row number).\n\ncolnames(meats) <- c(seq(850, 1048, by = 2), \"Moisture\", \"Fat\", \"Protein\")\n\nmeats <- \n  meats  %>% \n  rowid_to_column(var = \"SampleID\")"
  },
  {
    "objectID": "posts/NIT_tutorial_2/NIT_tutorial_2.html#histograms-with-ggplot",
    "href": "posts/NIT_tutorial_2/NIT_tutorial_2.html#histograms-with-ggplot",
    "title": "Near Infrared Transmitance Tutorial (part 2)",
    "section": "Histograms with ggplot",
    "text": "Histograms with ggplot\nNow we can see the histograms with ggplot\n\nmeats %>% \n  ggplot(aes(Protein)) +\n  geom_histogram(bins = 20) +\n  ggtitle(\"Protein Meat histogram\")\n\n\n\n\nFigure 1: Protein histogram.\n\n\n\n\nWe can do the same for moisture and fat, but with some code we can see all the histograms at the same time:\n\nmeats %>% \n  select(SampleID, Moisture, Fat, Protein) %>% \n  pivot_longer(cols = Moisture:Protein,\n               names_to = \"Parameter\",\n               values_to = \"Value\") %>% \n  mutate(Parameter = as.factor(Parameter)) %>% \n  ggplot(aes(Value)) +\n  geom_histogram() +\n  facet_wrap(~ Parameter, scales = \"free_x\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nFigure 2: Parameters histograms."
  },
  {
    "objectID": "posts/NIT_tutorial_2/NIT_tutorial_2.html#lets-see-the-raw-spectra-with-ggplot",
    "href": "posts/NIT_tutorial_2/NIT_tutorial_2.html#lets-see-the-raw-spectra-with-ggplot",
    "title": "Near Infrared Transmitance Tutorial (part 2)",
    "section": "Let´s see the raw spectra with ggplot",
    "text": "Let´s see the raw spectra with ggplot\nIn order to see the spectra with ggplot we pivot longer meats data grouping by SampleID:\n\nmeats_longer <- \n  meats  %>% \n  pivot_longer(cols = c(2:101),\n               names_to = \"wavelength\",\n               values_to = \"absorbance\")  %>%  \n  mutate(wavelength = as.integer(str_extract(wavelength, \"[:digit:]+\")))\n\nSave the workspace for future use\n\nmeats_longer  %>% \n  ggplot(aes(x = wavelength, y = absorbance, group = SampleID)) + \n  geom_line(alpha = 0.5) + \n  theme_light()\n\n\n\n\nFigure 3: Raw spectra with ggplot.\n\n\n\n\n\nsave.image(\"C:/BLOG/Workspaces/NIT Tutorial/NIT_ws2.RData\")"
  },
  {
    "objectID": "posts/NIT_tutorial_3/NIT_tutorial_3.html",
    "href": "posts/NIT_tutorial_3/NIT_tutorial_3.html",
    "title": "Near Infrared Transmitance Tutorial (part 3)",
    "section": "",
    "text": "Let´s start loading the libraries we are going to use in this post and the workspace from the previous post.\n\nlibrary(tidyverse)\nlibrary(corrplot)\nload(\"C:/BLOG/Workspaces/NIT Tutorial/NIT_ws2.RData\")\nls()\n\n[1] \"absorp\"       \"endpoints\"    \"meats\"        \"meats_longer\" \"tecator\""
  },
  {
    "objectID": "posts/NIT_tutorial_3/NIT_tutorial_3.html#correlation-between-the-parameters-outcomes",
    "href": "posts/NIT_tutorial_3/NIT_tutorial_3.html#correlation-between-the-parameters-outcomes",
    "title": "Near Infrared Transmitance Tutorial (part 3)",
    "section": "Correlation between the parameters (outcomes)",
    "text": "Correlation between the parameters (outcomes)\nIt is important to check the correlation between the outcomes variables (Moisture, Fat and Protein in this case). As we remember the outcomes are in the “endpoints” matrix.\n\nendpoints %>% \n  cor()\n\n           Moisture        Fat    Protein\nMoisture  1.0000000 -0.9881002  0.8145212\nFat      -0.9881002  1.0000000 -0.8608965\nProtein   0.8145212 -0.8608965  1.0000000\n\n\nThe correlation matrix show how the are high correlations between the three parameters, but we can use graphics to see it more clearly:\n\ncorrplot(cor(endpoints), method = \"ellipse\")\n\n\n\n\nFigure 1: Inter-correlation between parameters.\n\n\n\n\nBut to check better the trends and the possible outliers, we can use the function “pairs\n\npairs(endpoints)\n\n\n\n\nFigure 2: Parameters inter-correlation\n\n\n\n\nThis way we can see at least six outliers that seems to have some bias versus the linear trend. What are the reason for these outliers? (samples different from the rest, different reference method, bias in the reference method,…). We will try to see along the tutorial."
  },
  {
    "objectID": "posts/NIT_tutorial_3/NIT_tutorial_3.html#correlation-between-the-wavelengths-predictors",
    "href": "posts/NIT_tutorial_3/NIT_tutorial_3.html#correlation-between-the-wavelengths-predictors",
    "title": "Near Infrared Transmitance Tutorial (part 3)",
    "section": "Correlation between the wavelengths (predictors)",
    "text": "Correlation between the wavelengths (predictors)\nIt is known that the NIR or NIT predictor variables are highly correlated, due that we are working with overtones and combination bands, so the correlation matrix in this case show high correlation between all the variables, due to we are in the third overtone and working with very broad bands.For this reason we have to apply math treatments to the spectra to remove the scatter effect and derivatives to improve the resolution of the bands. The correlation between predictors is a long matrix (100.100), so the best way to see it it is graphically. By now we see the correlation matrix of the raw spectra (without any math treatment)\n\ncorrplot(cor(absorp), method = \"circle\", type = \"upper\", tl.cex = 0.5)\n\n\n\n\nFigure 3: Spectra collinearity."
  },
  {
    "objectID": "posts/NIT_tutorial_3/NIT_tutorial_3.html#correlation-between-outcomes-and-predictors",
    "href": "posts/NIT_tutorial_3/NIT_tutorial_3.html#correlation-between-outcomes-and-predictors",
    "title": "Near Infrared Transmitance Tutorial (part 3)",
    "section": "Correlation between outcomes and predictors",
    "text": "Correlation between outcomes and predictors\nAnother point is how the variation in the predictors matrix correlates with the variation of the outcomes. What we do is to see which wavelengths correlate better with a certain parameter getting three correlation spectra (one for every parameter).\n\ncor_rawspec_moi <- cor(tecator$Moisture, tecator$spec)\ncor_rawspec_fat <- cor(tecator$Fat, tecator$spec)\ncor_rawspec_prot <- cor(tecator$Protein, tecator$spec)\n\ncor_rawspec <- as.data.frame(rbind(cor_rawspec_moi, cor_rawspec_fat, cor_rawspec_prot))\ncor_rawspec <- cor_rawspec %>% \n  mutate(Parameter = as.factor(c(\"Moisture\", \"Fat\", \"Protein\")))\n\ncor_rawspec %>% \n  pivot_longer(cols = c(1:100), names_to = \"Wavelength\", values_to = \"Correlation\") %>% \n  mutate(Wavelength = as.integer(Wavelength)) %>% \n  ggplot(aes(x = Wavelength, y = Correlation, group = Parameter, col = Parameter)) +\n  geom_line()\n\n\n\n\nFigure 4: Correlation absorbance vs. parameters.\n\n\n\n\nAs we can see there are no wavelengths with high correlations, and if we would auto-scale every correlation spectrum, the spectrum would seem as a meat sample spectra (for moisture and protein inverted). All this is due to the scatter physical effects. So, with some math treatments to remove it the correlation will improve. Anyway, in the third overtone due to the bands overlapping, we would need a multivariate calibration with all or almost all the wavelengths.\nAs always save the workspace for future use:\n\nsave.image(\"C:/BLOG/Workspaces/NIT Tutorial/NIT_ws3.RData\")"
  },
  {
    "objectID": "posts/NIT_tutorial_4/NIT_tutorial_4.html",
    "href": "posts/NIT_tutorial_4/NIT_tutorial_4.html",
    "title": "Near Infrared Transmitance Tutorial (part 4)",
    "section": "",
    "text": "Let´s see what we have in the workspace from the previous posts:\n\nload(\"C:/BLOG/Workspaces/NIT Tutorial/NIT_ws3.RData\")\nls()\n\n[1] \"absorp\"           \"cor_rawspec\"      \"cor_rawspec_fat\"  \"cor_rawspec_moi\" \n[5] \"cor_rawspec_prot\" \"endpoints\"        \"meats\"            \"meats_longer\"    \n[9] \"tecator\"         \n\n\nWe can remove some objects we don´t need\n\nrm(\"cor_rawspec_fat\", \"cor_rawspec_moi\", \"cor_rawspec_prot\")\n\nNow we load the libraries we will use:\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "posts/NIT_tutorial_4/NIT_tutorial_4.html#scatter-correction-math-treatments",
    "href": "posts/NIT_tutorial_4/NIT_tutorial_4.html#scatter-correction-math-treatments",
    "title": "Near Infrared Transmitance Tutorial (part 4)",
    "section": "Scatter correction math-treatments",
    "text": "Scatter correction math-treatments\nThe idea now is to apply some math treatments to the raw spectra and check which one improves the correlation with the parameters of interest. Normally there are some common scatter removal algorithms that I use:\n\nStandard Normal Variate (SNV)\nDetrend (linear or quadratic)\nSNV + Detrend (linear or quadratic)\nMultiple Scatter Correction\n\nThere are some packages in R which have these math treatment with this name or a similar one, or we can create functions to apply these algorithms to the spectra matrix."
  },
  {
    "objectID": "posts/NIT_tutorial_4/NIT_tutorial_4.html#standard-normal-variate-snv",
    "href": "posts/NIT_tutorial_4/NIT_tutorial_4.html#standard-normal-variate-snv",
    "title": "Near Infrared Transmitance Tutorial (part 4)",
    "section": "Standard Normal Variate (SNV)",
    "text": "Standard Normal Variate (SNV)\nLet´s start using SNV, where we center every spectrum (subtracting the mean) and scale it (dividing by the standard deviation):\n\n#The algorithm is applied to the columns, so we transpose the matrix\nabsorp_snv <- scale(t(absorp), center = TRUE, scale = TRUE)\n#Let´s convert the corrected matrix as usual\nabsorp_snv <- t(absorp_snv)\n\nmatplot(colnames(absorp_snv), t(absorp_snv), type = \"l\", xlab = \"Wavelength (nm)\", ylab = \"Absorbance\", main = \"SNV Meat Spectra\")\n\n\n\n\nFigure 1: Meat spectra treated with SNV.\n\n\n\n\nWe can add the matrix treated with the SNV math treatment to the tecator dataframe\n\ntecator$snv_spec <- absorp_snv"
  },
  {
    "objectID": "posts/NIT_tutorial_4/NIT_tutorial_4.html#correlation-between-outcomes-and-predictors-with-snv",
    "href": "posts/NIT_tutorial_4/NIT_tutorial_4.html#correlation-between-outcomes-and-predictors-with-snv",
    "title": "Near Infrared Transmitance Tutorial (part 4)",
    "section": "Correlation between outcomes and predictors (with SNV)",
    "text": "Correlation between outcomes and predictors (with SNV)\nNow we can see if the correlation is improved\n\ncor_snvspec_moi <- cor(tecator$Moisture, tecator$snv_spec)\ncor_snvspec_fat <- cor(tecator$Fat, tecator$snv_spec)\ncor_snvspec_prot <- cor(tecator$Protein, tecator$snv_spec)\n\ncor_snvspec <- as.data.frame(rbind(cor_snvspec_moi, cor_snvspec_fat, cor_snvspec_prot))\n\ncor_snvspec <- cor_snvspec %>% \n  mutate(Parameter = as.factor(c(\"Moisture\", \"Fat\", \"Protein\")))\n\ncor_snvspec %>% \n  pivot_longer(cols = c(1:100), names_to = \"Wavelength\", values_to = \"Correlation\") %>% \n  mutate(Wavelength = as.integer(Wavelength)) %>% \n  ggplot(aes(x = Wavelength, y = Correlation, group = Parameter, col = Parameter)) +\n  geom_line()\n\n\n\n\nFigure 2: Correlation SNV signal with the parametes.\n\n\n\n\nNow, apart from the better correlation we can see an improvement in the definition of the correlations (positives and negatives), and the correlation spectra confirm what we have seen in the correlation between the parameters.\nAs always save the workspace for future use:\n\nsave.image(\"C:/BLOG/Workspaces/NIT Tutorial/NIT_ws4.RData\")"
  },
  {
    "objectID": "posts/NIT_tutorial_5/NIT_tutorial_5.html",
    "href": "posts/NIT_tutorial_5/NIT_tutorial_5.html",
    "title": "Near Infrared Transmitance Tutorial (part 5)",
    "section": "",
    "text": "As always load the previous workspace:\n\nload(\"C:/BLOG/Workspaces/NIT Tutorial/NIT_ws4.RData\")\nls()\n\n [1] \"absorp\"           \"absorp_snv\"       \"cor_rawspec\"      \"cor_snvspec\"     \n [5] \"cor_snvspec_fat\"  \"cor_snvspec_moi\"  \"cor_snvspec_prot\" \"endpoints\"       \n [9] \"meats\"            \"meats_longer\"     \"tecator\"         \n\n\nWe need in this post these libraries\n\nlibrary(pls)\nlibrary(tidymodels)"
  },
  {
    "objectID": "posts/NIT_tutorial_5/NIT_tutorial_5.html#multiple-scatter-correction-msc",
    "href": "posts/NIT_tutorial_5/NIT_tutorial_5.html#multiple-scatter-correction-msc",
    "title": "Near Infrared Transmitance Tutorial (part 5)",
    "section": "Multiple Scatter Correction (MSC)",
    "text": "Multiple Scatter Correction (MSC)\nWe use the function msc from the pls package\n\nabsorp_msc <- msc(absorp)\n\nThis is a very simple step, and we can see the result and compare it with SNV.\n\npar(mfrow=c(1, 2))\nmatplot(colnames(absorp_msc), t(absorp_msc), type = \"l\", xlab = \"wavelengths (nm)\", ylab = \"Absorbance\", main = \"MSC spectra\")\nmatplot(colnames(absorp_snv), t(absorp_snv), type = \"l\", xlab = \"wavelengths (nm)\", ylab = \"Absorbance\", main = \"SNV spectra\")\n\n\n\n\nFigure 1: MSC vs. SNV\n\n\n\n\nas we can see they are quite similar if we don´t take into account that the SNV is centered. SNV and MSC have very different calculations:\n\nSNV use independently every spectrum calculating the mean and the standard deviation of the spectrum data points and use them in the calculation.\nMSC calculate the mean spectrum and use it to calculate the slope (b) and intercept (a) with a linear regression to every particular spectrum, and after that use “a” and “b” to correct that particular spectrum. A new a and b are calculated for the next spectrum using again the mean spectrum and the new spectrum in the regression."
  },
  {
    "objectID": "posts/NIT_tutorial_5/NIT_tutorial_5.html#split-data-into-training-a-validation",
    "href": "posts/NIT_tutorial_5/NIT_tutorial_5.html#split-data-into-training-a-validation",
    "title": "Near Infrared Transmitance Tutorial (part 5)",
    "section": "Split data into training a validation",
    "text": "Split data into training a validation\nThis point is a good occasion to split the data into a training ans a test set. There are several ways to do it, but let´s use tidymodels this time:\n\nset.seed(1234)\ntecator_split <- initial_split(tecator, prop = 3/4, strata = Protein)\n\nWe have selected as strata the parameter protein, because it is the first model that we will develop.\n\ntec_prot_train <- training(tecator_split)\ntec_prot_test <- testing(tecator_split)\n\nNow we have two sets (training and test), and we will continue working with the training set, hiding the test set until we use it for the final validation. But before to hide the test set we will use it this time to explain the process to apply math treatments to the test set. Let´s apply the MSC math treatment again, but this time only to the training set:\n\ntec_prot_train_msc <- msc(tec_prot_train$spec)"
  },
  {
    "objectID": "posts/NIT_tutorial_5/NIT_tutorial_5.html#apply-msc-to-the-test-set",
    "href": "posts/NIT_tutorial_5/NIT_tutorial_5.html#apply-msc-to-the-test-set",
    "title": "Near Infrared Transmitance Tutorial (part 5)",
    "section": "Apply MSC to the test set",
    "text": "Apply MSC to the test set\nThe mean train spectrum is keep as reference, and now we can apply the MSC to the test set:\n\ntec_prot_test_msc <- predict(tec_prot_train_msc, newdata = tec_prot_test$spec)\n\nLet´s compare the two sets:\n\npar(mfrow=c(1, 2))\nmatplot(colnames(tec_prot_train_msc), t(tec_prot_train_msc), type = \"l\", xlab = \"wavelengths (nm)\", ylab = \"Absorbance\", main = \"MSC training set\", col = \"blue\")\nmatplot(colnames(tec_prot_test_msc), t(tec_prot_test_msc), type = \"l\", xlab = \"wavelengths (nm)\", ylab = \"Absorbance\", main = \"MSC test set\", col = \"green\")\n\n\n\n\nFigure 2: Training and Test sets math treated with MSC\n\n\n\n\nNow we can save these values in their respective dataframes:\n\ntec_prot_train$msc_spec <- tec_prot_train_msc\ntec_prot_test$msc_spec <- tec_prot_test_msc\n\nand save the workspace:\n\nsave.image(\"C:/BLOG/Workspaces/NIT Tutorial/NIT_ws5.RData\")"
  },
  {
    "objectID": "posts/NIT_tutorial_6/NIR_tutotial_6.html",
    "href": "posts/NIT_tutorial_6/NIR_tutotial_6.html",
    "title": "Near Infrared Transmitance Tutorial (part 6)",
    "section": "",
    "text": "First we load the work we have done until now:\n\nload(\"C:/BLOG/Workspaces/NIT Tutorial/NIT_ws5.RData\")\nls()\n\n [1] \"absorp\"             \"absorp_msc\"         \"absorp_snv\"        \n [4] \"cor_rawspec\"        \"cor_snvspec\"        \"cor_snvspec_fat\"   \n [7] \"cor_snvspec_moi\"    \"cor_snvspec_prot\"   \"endpoints\"         \n[10] \"meats\"              \"meats_longer\"       \"tec_prot_test\"     \n[13] \"tec_prot_test_msc\"  \"tec_prot_train\"     \"tec_prot_train_msc\"\n[16] \"tecator\"            \"tecator_split\"     \n\n\nWe can remove some files we have use for some visualization: it is important to maintain the dataframes we will use for the model development with different math treatments and the raw spectra.\n\nrm(cor_rawspec_fat,cor_rawspec_moi, cor_rawspec_prot,\n   cor_snvspec_fat, cor_snvspec_moi, cor_snvspec_prot)\n\nResuming what we have in th tecator dataframe:\n\nnames(tecator)\n\n[1] \"SampleID\" \"Moisture\" \"Fat\"      \"Protein\"  \"spec\"     \"snv_spec\"\n\n\nAs we can see we have the Sample ID, the parameters with the laboratory values for moisture, fat and protein, and the spectra without treatment (raw) and with the SNV treatment. At the moment we take apart the MSC math treatment , we have calculated in the previous post, and keep it for future use."
  },
  {
    "objectID": "posts/NIT_tutorial_6/NIR_tutotial_6.html#detrend-math-treatment",
    "href": "posts/NIT_tutorial_6/NIR_tutotial_6.html#detrend-math-treatment",
    "title": "Near Infrared Transmitance Tutorial (part 6)",
    "section": "DETREND math treatment",
    "text": "DETREND math treatment\nWith the detrend we want to remove the linear trend caused normally by the scatter. This shift is no so obvious in the wavelength range we are using in this tutorial, but when using NIR spectra range (1100 - 2500 nm) the shift increase quite a lot and can be linear or quadratic depending on the type of sample or sample presentation. Detrend normally is combined with SNV, and this combination is in the list of some of the commercial software available for NIR or NIT instruments. The math treatments we can see in this post are:\n\nDetrend linear only\nSNV and linear detrend\nSNV and quadratic detrend"
  },
  {
    "objectID": "posts/NIT_tutorial_6/NIR_tutotial_6.html#detrend-only-linear",
    "href": "posts/NIT_tutorial_6/NIR_tutotial_6.html#detrend-only-linear",
    "title": "Near Infrared Transmitance Tutorial (part 6)",
    "section": "Detrend only (linear)",
    "text": "Detrend only (linear)\nWe will use the {pracma} library and the function “detrend”.\n\nlibrary(pracma)\n\nLet´s apply the function to the raw spectra, and see the result:\n\ndt_spec <- pracma::detrend(tecator$spec)\npar(mfrow=c(1, 2))\nmatplot(colnames(tecator$spec), t(tecator$spec), type = \"l\", xlab = \"wavelengths (nm)\", ylab = \"Absorbance\", main = \"Raw spectra\", col = \"grey\")\nmatplot(colnames(dt_spec), t(dt_spec), type = \"l\", xlab = \"wavelengths (nm)\", ylab = \"Absorbance\", main = \"Only linear detrend\", col = \"blue\")\n\n\n\n\nFigure 1: Raw vs. Detrend only spectra\n\n\n\n\nin the figure we compare the spectra without any treatment (left) with the spectra with the linear detrend, and we can see how the spectra become flatter due to the trend removal, but the result can be improved with some normalization to remove the baseline shift, so for that reason we use the detrend and SNV combined."
  },
  {
    "objectID": "posts/NIT_tutorial_6/NIR_tutotial_6.html#snv-and-linear-detrend",
    "href": "posts/NIT_tutorial_6/NIR_tutotial_6.html#snv-and-linear-detrend",
    "title": "Near Infrared Transmitance Tutorial (part 6)",
    "section": "SNV and linear detrend",
    "text": "SNV and linear detrend\nIn this case we will use another library {prospectr} , using p = 1 to remove the linear trend.\n\nlibrary(prospectr)\nsnvdt1_spec <- prospectr::detrend(tecator$spec, \n                                  wav = as.numeric(colnames(tecator$spec)),\n                                  p = 1) \n\nNow we can compare the result with the raw spectra\n\npar(mfrow=c(1, 2))\nmatplot(colnames(tecator$spec), t(tecator$spec), type = \"l\", xlab = \"wavelengths (nm)\", ylab = \"Absorbance\", main = \"Raw spectra\", col = \"grey\")\nmatplot(colnames(snvdt1_spec), t(snvdt1_spec), type = \"l\", xlab = \"wavelengths (nm)\", ylab = \"Absorbance\", main = \"SNV and Linear Detrend\", col = \"blue\")\n\n\n\n\nFigure 2: Raw vs. SNV+DT1\n\n\n\n\nAs we can see there is an improvement in the result. We can see if the change from p = 1 to p = 2 make some differences:"
  },
  {
    "objectID": "posts/NIT_tutorial_6/NIR_tutotial_6.html#snv-and-quadratic-detrend",
    "href": "posts/NIT_tutorial_6/NIR_tutotial_6.html#snv-and-quadratic-detrend",
    "title": "Near Infrared Transmitance Tutorial (part 6)",
    "section": "SNV and quadratic detrend",
    "text": "SNV and quadratic detrend\n\nsnvdt2_spec <- prospectr::detrend(tecator$spec, \n                                  wav = as.numeric(colnames(tecator$spec)),\n                                  p = 2) \n\nNow we can compare the result with the raw spectra and linear detrend spectra.\n\npar(mfrow=c(1, 3))\nmatplot(colnames(tecator$spec), t(tecator$spec), type = \"l\", xlab = \"wavelengths (nm)\", ylab = \"Absorbance\", main = \"Raw spectra\", col = \"grey\")\nmatplot(colnames(snvdt1_spec), t(snvdt1_spec), type = \"l\", xlab = \"wavelengths (nm)\", ylab = \"Absorbance\", main = \"SNV and Linear Detrend\", col = \"blue\")\nmatplot(colnames(snvdt2_spec), t(snvdt2_spec), type = \"l\", xlab = \"wavelengths (nm)\", ylab = \"Absorbance\", main = \"SNV and Quadratic Detrend\", col = \"blue\")\n\n\n\n\nFigure 3: Raw vs. SNV+DT1 and SNV+DT2"
  },
  {
    "objectID": "posts/NIT_tutorial_6/NIR_tutotial_6.html#detrend-correlations-with-protein-depending-on-type",
    "href": "posts/NIT_tutorial_6/NIR_tutotial_6.html#detrend-correlations-with-protein-depending-on-type",
    "title": "Near Infrared Transmitance Tutorial (part 6)",
    "section": "Detrend correlations with Protein depending on type",
    "text": "Detrend correlations with Protein depending on type\nLet´s check the correlations for the different math treatment combinations using detrend to get some conclusions.\n\ncor_prot_dt <- cor(tecator$Protein, dt_spec)\ncor_prot_snvdt1 <- cor(tecator$Protein, snvdt1_spec)\ncor_prot_snvdt2 <- cor(tecator$Protein, snvdt2_spec)\n\ncor_prot_with_dt <- as.data.frame(rbind(cor_prot_dt, cor_prot_snvdt1, cor_prot_snvdt2))\n\nlibrary(tidyverse)\n\ncor_prot_with_dt <- cor_prot_with_dt %>% \n  mutate(Mat_treatment = as.factor(c(\"DT\", \"SNV+DT1\", \"SNV+DT2\")))\n\n\ncor_prot_with_dt %>% \n  pivot_longer(cols = c(1:100), names_to = \"Wavelength\", values_to = \"Correlation\") %>% \n  mutate(Wavelength = as.integer(Wavelength)) %>% \n  ggplot(aes(x = Wavelength, y = Correlation, group = Mat_treatment, col = Mat_treatment)) +\n  geom_line()\n\n\n\n\nFigure 4: Wavelength correlation with protein for the different Detrend treatments\n\n\n\n\nAs we can see it seems that there are an improvement in the correlation when using Quadratic Detrend combined with SNV. Anyway we wiil see during the models developments if the statistics confirm this.\nWe can add all these three new math-treatments to the tecator dataframe for future use:\n\ntecator$dt_spec <- dt_spec\ntecator$snvdt1_spec <- snvdt1_spec\ntecator$sndt2_spec <- snvdt2_spec\n\nLet´s save the workspace\n\nsave.image(\"C:/BLOG/Workspaces/NIT Tutorial/NIT_ws6.RData\")"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "I am using Quarto to develop a new blog about the use of R and its chemometric tools applyed to the Near Infared spectroscopy. Hope you enjoyed the coming posts in the future."
  }
]