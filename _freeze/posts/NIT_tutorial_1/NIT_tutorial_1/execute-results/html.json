{
  "hash": "a165cddb9569a0c4b2574516a649030a",
  "result": {
    "markdown": "---\ntitle: \"Near Infrared Transmitance Tutorial (part 1)\"\ndescription: \"Plot the near infrared transmitance spectra of meat samples and have a look to the histograms of the main parameters using classic R code\"\nauthor: \"José Ramón Cuesta\"\ndate: \"2022-09-26\"\ncategories: [NIT Tutorial]\n---\n\n\n## Loading and organizing data\n\nThis is the first post about how to work with Near Infrared Transmitance spectra, using the data available in the package Caret and called \"tecator\". Just consult the information about this data in R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(caret)\n?tecator\n```\n:::\n\n\nWhen loading tecator, we have two data tables: \"absorp\" and \"endpoints\" with the spectra and reference values for the parameters \"water\", \"fat\" and \"protein\" for the 215 meat samples.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(tecator)\nls()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"absorp\"    \"endpoints\"\n```\n:::\n:::\n\n\nThe spectra data is in the \"absorp\" table which is a matrix of 215 rows (number of samples) ,and 100 columns (number of wavelengths ), so we can give names to the columns of \"absorp\" matrix.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(absorp) <- seq(850, 1048, by = 2)\n```\n:::\n\n\nWe can have a look to the spectra and see its appearance:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmatplot(colnames(absorp), t(absorp), type = \"l\", ylab = \"Absorbance\", xlab = \"wavelength (nm)\", main = \"Raw meat spectra\")\n```\n\n::: {.cell-output-display}\n![Raw spectra.](NIT_tutorial_1_files/figure-html/fig-rawspec-1.png){#fig-rawspec width=672}\n:::\n:::\n\n\nWe can see the differences in absorbance for every spectra due to the scatter, differences in the pathlength and other physical reasons. This is something we have to work on to remove it and try to see as better as possibles the chemical changes due to the differences in moisture, fat and protein, which are the parameter we want to build models.\n\nThe \"endpoints\" table has the reference values for the parameters of interest (Moisture, Fat and Protein). It is important to have a look to the parameters distribution, so we can use for this the histogram, but first lets give names to the parameters matrix.\n\nAs we can see we have not coloumn names\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(endpoints)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNULL\n```\n:::\n:::\n\n\nSo we can give them names:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(endpoints) <- c(\"Moisture\", \"Fat\", \"Protein\")\n```\n:::\n\n\n## Looking to the parameters distribution\n\nLet´s see the Moisture histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhistogram(endpoints[ , 1], xlab = \"Moisture content\", main =\"Histogram Moisture\", col = \"blue\")\n```\n\n::: {.cell-output-display}\n![Moisture histogram.](NIT_tutorial_1_files/figure-html/fig-histMoi-1.png){#fig-histMoi width=672}\n:::\n:::\n\n\nNow the Fat histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhistogram(endpoints[ , 2], xlab = \"Fat content\", main =\"Histogram Fat\", col = \"grey\")\n```\n\n::: {.cell-output-display}\n![Fat histogram.](NIT_tutorial_1_files/figure-html/fig-histFat-1.png){#fig-histFat width=672}\n:::\n:::\n\n\nand finally the Protein histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhistogram(endpoints[ , 3], xlab = \"Protein content\", main =\"Histogram Protein\", col = \"red\")\n```\n\n::: {.cell-output-display}\n![Protein histogram.](NIT_tutorial_1_files/figure-html/fig-histProt-1.png){#fig-histProt width=672}\n:::\n:::\n\n\nWe can create a data frame called \"tecator\" with the \"endpoints\" and \"absorp\" matrices\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntecator <- data.frame(endpoints)\ntecator$spec <- absorp\n```\n:::\n\n\nNow let´s save the dataframe to use in another post:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsave.image(\"C:/BLOG/Workspaces/NIT Tutorial/NIT_ws1.RData\")\n```\n:::\n",
    "supporting": [
      "NIT_tutorial_1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}