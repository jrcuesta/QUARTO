{
  "hash": "79aac0c60ef4ac78d69d7509c1d06497",
  "result": {
    "markdown": "---\ntitle: \"Near Infrared Transmitance Tutorial (part 5)\"\ndescription: \"This time we use the Multiple Scatter Correction algorithm ro remove the scatter\"\nauthor: \"José Ramón Cuesta\"\nimage: MSC_spectra.jpeg\ndate: \"2022-10-05\"\ncategories: [NIT Tutorial, Removing scatter, Math-treatments]\n---\n\n\n## Organizing data\n\nAs always load the previous workspace:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(\"C:/BLOG/Workspaces/NIT Tutorial/NIT_ws4.RData\")\nls()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"absorp\"           \"absorp_snv\"       \"cor_rawspec\"      \"cor_snvspec\"     \n [5] \"cor_snvspec_fat\"  \"cor_snvspec_moi\"  \"cor_snvspec_prot\" \"endpoints\"       \n [9] \"meats\"            \"meats_longer\"     \"tecator\"         \n```\n:::\n:::\n\n\nWe need in this post these libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pls)\nlibrary(tidymodels)\n```\n:::\n\n\n## Multiple Scatter Correction (MSC)\n\nWe use the function **msc** from the **pls** package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nabsorp_msc <- msc(absorp)\n```\n:::\n\n\nThis is a very simple step, and we can see the result and compare it with SNV.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(1, 2))\nmatplot(colnames(absorp_msc), t(absorp_msc), type = \"l\", xlab = \"wavelengths (nm)\", ylab = \"Absorbance\", main = \"MSC spectra\")\nmatplot(colnames(absorp_snv), t(absorp_snv), type = \"l\", xlab = \"wavelengths (nm)\", ylab = \"Absorbance\", main = \"SNV spectra\")\n```\n\n::: {.cell-output-display}\n![MSC vs. SNV](NIT_tutorial_5_files/figure-html/fig-snv_vs_msc-1.png){#fig-snv_vs_msc width=672}\n:::\n:::\n\n\nas we can see they are quite similar if we don´t take into account that the SNV is centered. SNV and MSC have very different calculations:\n\n-   SNV use independently every spectrum calculating the mean and the standard deviation of the spectrum data points and use them in the calculation.\n\n-   MSC calculate the mean spectrum and use it to calculate the slope (b) and intercept (a) with a linear regression to every particular spectrum, and after that use \"a\" and \"b\" to correct that particular spectrum. A new a and b are calculated for the next spectrum using again the mean spectrum and the new spectrum in the regression.\n\n## Split data into training a validation\n\nThis point is a good occasion to split the data into a training ans a test set. There are several ways to do it, but let´s use tidymodels this time:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\ntecator_split <- initial_split(tecator, prop = 3/4, strata = Protein)\n```\n:::\n\n\nWe have selected as strata the parameter protein, because it is the first model that we will develop.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntec_prot_train <- training(tecator_split)\ntec_prot_test <- testing(tecator_split)\n```\n:::\n\n\nNow we have two sets (training and test), and we will continue working with the training set, hiding the test set until we use it for the final validation. But before to hide the test set we will use it this time to explain the process to apply math treatments to the test set. Let´s apply the MSC math treatment again, but this time only to the training set:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntec_prot_train_msc <- msc(tec_prot_train$spec)\n```\n:::\n\n\n## Apply MSC to the test set\n\nThe mean train spectrum is keep as reference, and now we can apply the MSC to the test set:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntec_prot_test_msc <- predict(tec_prot_train_msc, newdata = tec_prot_test$spec)\n```\n:::\n\n\nLet´s compare the two sets:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(1, 2))\nmatplot(colnames(tec_prot_train_msc), t(tec_prot_train_msc), type = \"l\", xlab = \"wavelengths (nm)\", ylab = \"Absorbance\", main = \"MSC training set\", col = \"blue\")\nmatplot(colnames(tec_prot_test_msc), t(tec_prot_test_msc), type = \"l\", xlab = \"wavelengths (nm)\", ylab = \"Absorbance\", main = \"MSC test set\", col = \"green\")\n```\n\n::: {.cell-output-display}\n![Training and Test sets math treated with MSC](NIT_tutorial_5_files/figure-html/fig-MSC_train_test-1.png){#fig-MSC_train_test width=672}\n:::\n:::\n\n\nNow we can save these values in their respective dataframes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntec_prot_train$msc_spec <- tec_prot_train_msc\ntec_prot_test$msc_spec <- tec_prot_test_msc\n```\n:::\n\n\nand save the workspace:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsave.image(\"C:/BLOG/Workspaces/NIT Tutorial/NIT_ws5.RData\")\n```\n:::",
    "supporting": [
      "NIT_tutorial_5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}